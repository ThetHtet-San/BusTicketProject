@model Com.MrIT.ViewModels.VmStaffPage
@{
    ViewData["Title"] = "Listing";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Listing</h1>
<div class="row">
    <div class="col-sm-1">
        <label>Search:</label>
        
    </div>
    <div class="col-sm-4">
        <input type="text" id="txtKeyword" name="txtKeyword" class="form-control" value="@TempData["keyword"]" />
        
    </div>
    <div class="col-sm-4">
        <button class="btn btn-primary" onclick="loadData(1)">Search</button>
        <a href="@Url.Action("ExportToExcel","Staff")" class="btn btn-info">Download</a>
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
        <table class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th> <a href="@Url.Action("Create","Staff")">New</a> </th>
                    <th>Code</th>
                    <th>Name</th>
                    <th>Address</th>
                </tr>
            </thead>
            <tbody>
                @{
                    foreach (var item in Model.Result.Records)
                    {
                        <tr>
                            <td> <a href="@Url.Action("Edit", "Staff", new { a= System.Net.WebUtility.UrlEncode (item.EncryptId) })">Edit</a> | <a href="@Url.Action("Detail", "Staff", new { a= System.Net.WebUtility.UrlEncode (item.EncryptId) })">View</a> | <a href="@Url.Action("Delete", "Staff", new { a= System.Net.WebUtility.UrlEncode (item.EncryptId) })">Delete</a></td>
                            <td> @item.Code  </td>
                            <td> @item.Name  </td>
                            <td> @item.Address  </td>
                        </tr>
                    }
                }
            </tbody>

        </table>
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
        @if (Model.Result.TotalPage > 1)
        {
            int currentPage = Model.Result.CurrentPage;
            int totalPage = Model.Result.TotalPage;
            int previousPage = Model.Result.PreviousPage;
            int nextPage = Model.Result.NextPage;

            var startPage = currentPage - 5;
            var endPage = currentPage + 4;
            if (currentPage < 6)
            {
                startPage = 1;
            }
            if (totalPage < endPage)
            {
                endPage = totalPage;
            }
        <ul class="pagination m-3">
            @if (currentPage > 1)
            {
                <li>
                    <a href="#" class="page-link" onclick="loadData(1)">First</a>
                </li>
                <li>
                    <a href="#" class="page-link" onclick="loadData(@(currentPage - 1))">Previous</a>
                </li>
            }

            @for (var page = startPage; page <= endPage; page++)
            {
                if (page == currentPage)
                {
                    <li>
                        <a href="#" class="page-link" style="background-color:gray;color:white;"> @(page) </a>
                    </li>
                }
                else
                {
                    <li>
                        <a href="#" class="page-link" onclick="loadData(@(page))"> @(page) </a>
                    </li>
                }

            }

            @if (currentPage < totalPage)
            {
                <li>
                    <a href="#" class="page-link" onclick="loadData(@(currentPage + 1))">Next</a>
                </li>
                <li>
                    <a href="#" class="page-link" onclick="loadData(@(totalPage))">Last</a>
                </li>
            }
        </ul>
        }
    </div>
</div>




<script>
    function loadData(n) {
        var strKeyword = $("#txtKeyword").val();

        window.location.href = "@Url.Action("Listing","Staff")?keyword=" + strKeyword + "&page=" + n
    }
</script>